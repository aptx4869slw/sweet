<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.song.sweetgirl.dao.TestDAO">
    <resultMap id="BaseResultMap" type="com.song.sweetgirl.model.Test">
        <result property="id" column="id" jdbcType="BIGINT"/>
        <result property="number" column="number" jdbcType="INTEGER"/>
        <result property="string" column="string" jdbcType="VARCHAR"/>
        <result property="price" column="price" jdbcType="DECIMAL"/>
        <result property="flag" column="flag" jdbcType="BIT"/>
        <result property="localDateTime" column="local_date_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, number, string, price, flag, local_date_time
    </sql>

    <insert id="save" parameterType="com.song.sweetgirl.model.Test" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO test (number, string, price, flag, local_date_time)
        VALUES(#{number}, #{string}, #{price}, #{flag}, #{localDateTime})
    </insert>

    <select id="findOne" resultMap="BaseResultMap" parameterType="Long">
        SELECT
        <include refid="Base_Column_List"/>
        FROM test
        WHERE id = #{id}
    </select>

    <select id="findFirstTest" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM test
        limit 1
    </select>

    <select id="findAll" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM test
    </select>

    <select id="findAllByPage" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM test
    </select>

    <select id="countTests" resultType="Integer">
        SELECT COUNT(1) FROM test
    </select>

    <update id="update" parameterType="com.song.sweetgirl.model.Test">
        UPDATE test
        <trim prefix="set" suffixOverrides=",">
            <if test="number != null">
                number = #{number},
            </if>
            <if test="string != null and string != ''">
                string = #{string},
            </if>
            <if test="price != null">
                price = #{price},
            </if>
            <if test="flag != null">
                flag = #{flag},
            </if>
            <if test="localDateTime != null">
                local_date_time = #{localDateTime},
            </if>
        </trim>
        WHERE id = #{id}
    </update>

    <delete id="delete" parameterType="Long">
        DELETE FROM test
        WHERE id = #{id}
    </delete>

</mapper>